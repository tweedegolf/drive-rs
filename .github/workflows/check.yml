on:
  push:
    branches:
      - main
  pull_request: { }
  merge_group:
    types:
      - checks_requested
permissions:
  contents: read
jobs:
  build:
    name: Build and check database and frontend
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install npm dependencies
        run: npm ci
        working-directory: frontend
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: "stable"
      - name: Rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
        with:
          shared-key: "check"
          cache-all-crates: true # Also cache taplo-cli
      - name: Install tools
        run: cargo install taplo-cli --locked
      - name: Clippy
        run: cargo clippy --locked --all-targets --all-features --workspace -- -Dwarnings
      - name: Test rust
        run: cargo test --locked
      - name: Check rust formatting
        run: cargo fmt --all --check
      - name: Check frontend formatting
        run: npm run fmt-check
        working-directory: frontend
      - name: Check driver-db syntax
        run: taplo check driver-db/*.toml
      - name: Check driver-db formatting
        run: taplo fmt --check --diff
      - name: Download db-dump
        run: wget --no-verbose https://static.crates.io/db-dump.tar.gz
      - name: Build database
        run: cargo run --locked --release --bin read-driver-db
      - name: Copy generated database to frontend
        run: cp full-crate-db.json frontend/src/
      - name: Check frontend
        run: npm run check -- --fail-on-warnings
        working-directory: frontend
      - name: Build frontend
        run: npm run build
        working-directory: frontend